quick(list) list=[6, 8, 3, 9, 10, 1, 2, 4, 7, 5]
    pivot=5
    g1=[3,1,2,4]
    g2=[6,8,9,10,7]    
    quick(g1) 
        pivot=4
        g1=[3,1,2]
        g2=[]    
        quick(g1)
            pivot=2
            g1=[1]
            g2=[3]    
            quick(g1)
                pivot=1
                g1=[]
                g2=[]    
                quick(g1) 
                    return []
                g1=quick(g1)=[]                
                quick(g2) 
                    return []
                g2=quick(g2)=[]
                list_b=[1]
            g1=quick(g1)=[1]            
            quick(g2) 
                pivot=3
                g1=[]
                g2=[]                
                quick(g1) 
                    return []
                g1=quick(g1)=[]                
                quick(g2) g2=[]
                    return []            
                g2=quick(g2)=[]
                list_b=[3]
            g2=quick(g2)=[3]            
            list_b=[1,2,3]
            g1=quick(g1)=[1,2,3]
        quick(g2) 
            return []
        g2=quick(g2)=[]
        list_b=[1,2,3,4]    
    quick(g2) 
        pivot=7
        g1=[6]
        g2=[8,9,10]
        quick(g1) 
            pivot=6
            g1=[]
            g2=[]
            list_b=[6]    
        g1=quick(g1)=[6]
        quick(g2)
            pivot=10
            g1=[8,9]
            g2=[]
            quick(g1)
                pivot=9
                g1=[8]
                g2=[]
                list_b=[8,9]
            g1=quick(g1)=[8,9]
            g2=quick(g2)=[]
            list_b=[8,9,10]
        g2=quick(g2)=[8,9,10]
        list_b=[6,7,8,9,10]
    g2=quick(g2)=[6,7,8,9,10]
    list_b=[1,2,3,4,5,6,7,8,9,10]

#중간에 함수자신을 다시 호출하면, 호출한 지점에서 함수 첫 부분으로 돌아가 다시 진행한다.
#무한루프에 빠지지 않으려면 데이터가 점점 변화하도록 만들기
    #숫자를 나누고 나누고 나눌 숫자가 없으면 빈 리스트를 반환 
    #빈 리스트를 대입하고 다음 부분 진행
    #위의 방식으로 조금씩 진행하도록 만들어서 순환식을 마무리

