# 33. 체육복 / 탐욕법
# https://programmers.co.kr/learn/courses/30/lessons/42862
# ----------------------------------------------------------------------------------------
# 문제 설명
# 점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 
# 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 
# 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 
# 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.

# 전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때, 
# 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.

# 제한사항
# 전체 학생의 수는 2명 이상 30명 이하입니다.
# 체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
# 여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
# 여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.
# 여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 
# 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.

# 입출력 예
# n	lost	    reserve 	return
# 5	[2, 4]  	[1, 3, 5]   5
# 5	[2, 4]  	[3]	        4
# 3	[3]     	[1]	        2

# 입출력 예 설명
# 예제 #1
# 1번 학생이 2번 학생에게 체육복을 빌려주고, 3번 학생이나 5번 학생이 4번 학생에게 체육복을 빌려주면 학생 5명이 체육수업을 들을 수 있습니다.

# 예제 #2
# 3번 학생이 2번 학생이나 4번 학생에게 체육복을 빌려주면 학생 4명이 체육수업을 들을 수 있습니다.
# ----------------------------------------------------------------------------------------
# 문제 해석
# lost명단의 학생에 없는 reserve명단의 학생이 체육복을 빌려줄 수 있다.
# 체육복은 자기번호를 기준으로, 바로 앞 또는 바로 뒤의 학생에게만 빌려줄 수 있다.
# 여분이 남더라도 return의 최대값은 n = 전체 학생의 수이다.

# 접근 방법
# [전체 학생의 리스트]를 생성하고, 체육복이 없으면 0, 있으면 1, 여분이 있으면 2로 설정하도록 구성해본다.
# 이 때, 리스트의 인덱스번호를 학생번호로 이용할 수 있도록 한다. 
# 그리고 인덱스를 돌면서 여분이 있는 학생의 경우에 바로 앞, 뒤 번호 학생을 조사하여 빌려주도록 한다. 
# ----------------------------------------------------------------------------------------
n1, n2, n3 = 5, 5, 3
lost1, lost2, lost3 = [2, 4], [2, 4], [3]
reserve1, reserve2, reserve3 = [1, 3, 5], [3], [1]

def solution(n, lost, reserve):
    answer = 0
    students = [1 for i in range(n)]

    for l in lost:
        students[l-1] -= 1

    for r in reserve:
        students[r-1] += 1

    for index in range(len(students)):
        if index == 0:
            if (students[index] == 2 and students[index+1] == 0):
                students[index] -= 1
                students[index+1] += 1
        elif 0 < index < len(students)-1:
            if (students[index] == 2 and students[index-1] == 0):
                students[index] -= 1
                students[index-1] += 1
            elif (students[index] == 2 and students[index+1] == 0):
                students[index] -= 1
                students[index+1] += 1
        else:
            if (students[index] == 2 and students[index-1] == 0):
                students[index] -= 1
                students[index-1] += 1

    answer = (n - students.count(0))
    return answer

solution(n1, lost1, reserve1)
solution(n2, lost2, reserve2)
solution(n3, lost3, reserve3)

# return1 = 5
# return2 = 4
# return3 = 2
# ----------------------------------------------------------------------------------------

# 프로그래머스 코드정확도 채점 - 합계: 100.0 / 100.0